/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        
        ListNode* l1=headA;
        ListNode* l2=headB;
        int c1=0;
        int c2=0;
        ListNode* l1P=l1;
        ListNode* l2P=l2;
        
        while(l1!=NULL)
        {
            l1P=l1;
            l1=l1->next;
            c1++;
        }
        
        while(l2!=NULL)
        {
            l2P=l2;
            l2=l2->next;
            c2++;
        }
        
        if(l1P!=l2P)
            return NULL;
        
        if(c1>=c2)
        {
            while(c1!=c2)
            {
                headA=headA->next;
                c1--;
            }
            
            while(headA!=headB)
            {
                headA=headA->next;
                headB=headB->next;
            }
        }
        
        else
        {
            while(c1!=c2)
            {
                headB=headB->next;
                c2--;
            }
            
            while(headA!=headB)
            {
                headA=headA->next;
                headB=headB->next;
            }
        }
        
        return headA;
    }
};
