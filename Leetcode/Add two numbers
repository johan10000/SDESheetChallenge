/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        ListNode* head=l1;
        int y=0;
        ListNode* l1P=l1;
        
        while(l1!=NULL && l2!=NULL)
        {
            int z=(l1->val+l2->val+y)/10;
            l1->val=(l1->val+l2->val+y)%10;
            y=z;
            l1P=l1;
            l1=l1->next;
            l2=l2->next;
        }
        
        while(l1!=NULL)
        {
            cout<<l1->val;
            int z=(l1->val+y)/10;
            l1->val=(l1->val+y)%10;
            y=z;
            l1P=l1;
            l1=l1->next;
        }
        
        if(l2!=NULL)
        {
            l1P->next=l2;
            l1=l2;
            while(l1!=NULL)
            {
                int z=(l1->val+y)/10;
                l1->val=(l1->val+y)%10;
                y=z;
                l1P=l1;
                l1=l1->next;
            }
        }
        
        while(y!=0)
        {
            ListNode* t=new ListNode();
            t->val=y%10;
            y=y/10;
            l1P->next=t;
            l1P=l1P->next;
        }
        
        return head;
    }
};
