/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        
        if(head==NULL)
            return head;
        
        if(head->next==NULL && head->next==head)
            return true;
        
        if(head->next==NULL && head->next!=head)
            return false;
        
        ListNode* l1=head;
        ListNode* l2=head;
        
        while(1)
        {
            if(l2==NULL || l2->next==NULL)
                return false;
            
            l1=l1->next;
            l2=l2->next->next;
            
            if(l1==l2)
                return true;
        }
        
        return false;
    }
};
