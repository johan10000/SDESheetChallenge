/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    bool isPalindrome(ListNode* head) {
        
        if(head->next==NULL)
            return true;
        
        ListNode* slow=head;
        ListNode* fast=head;
        ListNode* prev=NULL;
        
        while(fast!=NULL)
        {
            if(fast->next==NULL)
            {
                slow=slow->next;
                break;
            }
            
            fast=fast->next->next;
            ListNode* save=slow->next;
            slow->next=prev;
            prev=slow;
            slow=save;
        }
        
        while(1)
        {
            if(prev==NULL && slow==NULL)
                return true;
            
            if((prev==NULL && slow!=NULL)||(prev!=NULL && slow==NULL)||prev->val!=slow->val)
                return false;
            
            prev=prev->next;
            slow=slow->next;
        }
        
        return true;
    }
};
